[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tactical-correlator"
version = "1.0.0"
description = "Advanced Multi-Source Forensic Correlation Framework with ML Intelligence"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "TacticalCorrelator Team", email = "contact@tacticalcorrelator.com"}
]
maintainers = [
    {name = "TacticalCorrelator Team", email = "contact@tacticalcorrelator.com"}
]
keywords = [
    "forensics", "digital-forensics", "correlation", "machine-learning",
    "neo4j", "incident-response", "cybersecurity", "timeline-analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: System :: Systems Administration",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.3.0",
    "neo4j>=5.0.0",
    "python-evtx>=0.8.0",
    "yara-python>=4.2.0",
    "pycryptodome>=3.18.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "tqdm>=4.64.0",
    "jinja2>=3.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "websockets>=11.0.0",
    "plotly>=5.15.0",
    "networkx>=3.1.0",
    "python-magic>=0.4.27",
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "loguru>=0.7.0",
    "pydantic>=2.0.0",
    "asyncio-throttle>=1.0.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]
ml = [
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "sentence-transformers>=2.2.0",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
]
viz = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "dash>=2.14.0",
    "dash-bootstrap-components>=1.4.0",
    "plotly-dash>=5.15.0",
]

[project.urls]
Homepage = "https://github.com/servais1983/TacticalCorrelator"
Repository = "https://github.com/servais1983/TacticalCorrelator"
Documentation = "https://tacticalcorrelator.readthedocs.io"
Issues = "https://github.com/servais1983/TacticalCorrelator/issues"
Changelog = "https://github.com/servais1983/TacticalCorrelator/blob/main/CHANGELOG.md"

[project.scripts]
tactical-correlator = "tactical_correlator.cli:main"
tcorr = "tactical_correlator.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["tactical_correlator*"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=tactical_correlator --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["tactical_correlator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]